* {
	font-family: sans-serif;
}
body {
	display: flex;
	margin: 0;
}
html, body {
	height: 100%;
}
summary {
	font-weight: bold;
	overflow: hidden;
}
summary > input {
	float: right;
}
fieldset {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	border: 0;
	padding: 0;
}
fieldset > label {
	display: contents;
}
fieldset span:has(input[type="checkbox"]) {
	text-align: right;
}
fieldset output {
	border: 1px solid gray;
	border-radius: 2px;
}
output {
	font-size: smaller;
	padding: 2px;
}
.toggle-button {
	font-size: small;
	background-color: #eee;
	border: 1px solid gray;
	text-align: center;
	padding: 2px;
}
.toggle-button > input[type="checkbox"] {
	display: none;
}
.toggle-button:hover {
	background-color: #ddd;
}
.toggle-button:active {
	background-color: #f8f8f8;
}
.toggle-button:has(> input[type="checkbox"]:checked) {
	background-color: #ccc;
}

#sidebar {
	background-color: whitesmoke;
	border-left: 1px solid gray;
	overflow-y: auto;
	padding: 4px 0 4px 4px;
	flex: 0 0 17em;
}
#sidebar > details > :not(:first-child) {
	padding: 4px;
}
#sidebar fieldset {
	row-gap: 4px;
	padding: 4px;
	margin: 0;
}
#connection-icon {
	float: right;
	font-weight: normal;
	font-size: smaller;
}
#connection-icon::after {
	margin-left: 2px;
}
#connection-icon[data-state="connected"]::after {
	content: "\1F7E2";
}
#connection-icon[data-state="failed"]::after {
	content: "\274C";
}
label:has(#connection-type:not([data-value="MIDI"])) ~ .connection-midi {
	display: none;
}
label:has(#connection-type:not([data-value="WebSocket"])) ~ .connection-websocket {
	display: none;
}

#channels {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	overflow: auto;
}
#channels > details {
	padding: 4px;
}
/* HACK: it seems display: flex doesn't work properly in <details> */
#channels > details:not([open]) + .channel-strip {
	display: none;
}
#channels > hr {
	margin: 3px 0;
}

.channel-strip {
	flex-basis: 400px;
	display: flex;
	flex-shrink: 1;
	min-height: 200px;
	overflow-x: auto;
	column-gap: 3px;
	padding-inline: 3px;
}
.channel-outer {
	display: flex;
	border: 1px solid gray;
	border-radius: 4px;
	overflow: clip;
}
.channel-outer.channel-right:has(.stereo:checked) {
	display: none;
}
.channel {
	display: flex;
	flex-direction: column;
	width: 100px;
}
.channel > * {
	border: 0;
}
.channel > :not(:last-child) {
	border-bottom: 1px solid gray;
}
.channel:has(.channel-show-settings:not(:checked)) ~ .channel-panel-settings {
	display: none;
}
.channel:has(.channel-show-eq:not(:checked)) ~ .channel-panel-eq {
	display: none;
}
.channel:has(.channel-show-dynamics:not(:checked)) ~ .channel-panel-dynamics {
	display: none;
}
.channel-name {
	text-align: center;
	font-weight: bold;
	border: 0;
}
.channel-pan {
	text-align: center;
}
.channel-mute {
	display: flex;
	justify-content: center;
}
.channel-mute > label {
	border-width: 0;
	padding-block: 1px;
	flex-grow: 1;
}
.channel-mute > label:first-of-type {
	border-right-width: 1px;
}
.channel-volume {
	display: flex;
	flex-grow: 1;
	min-height: 0;
}
.channel-volume meter {
	height: auto;
}
.channel-volume meter + meter {
	margin-left: 0;
}
.channel-volume meter:not(:only-of-type) {
	block-size: 8px;
}
.channel-volume > :first-child {
	margin-left: auto;
}
.channel-volume > input[type="range"] {
	margin-right: auto;
}
.channel-volume > :where(meter, input[type="range"]) {
	writing-mode: vertical-lr;
	direction: rtl;
	margin: 2px 0;
}
.channel-volume-number {
	text-align: center;
}
.channel-volume-output {
	text-align: center;
}
.channel-volume-output option:disabled {
	display: none;
}
.channel-panel-buttons {
	margin-top: auto;
	margin-bottom: 4px;
	width: 1.5em;
}
.channel-panel-buttons .toggle-button {
	display: block;
	border-width: 1px 0 0 1px;
}
.channel-panel-buttons .toggle-button:first-child {
	border-top-left-radius: 4px;
}
.channel-panel-buttons .toggle-button:last-child {
	border-bottom-width: 1px;
	border-bottom-left-radius: 4px;
}
.channel:has(~ .channel-panel-eq :is(.eq, .lowcut):checked) .channel-show-eq-label,
.channel:has(~ .channel-panel-dynamics :is(.dynamics, .autolevel):checked) .channel-show-dynamics-label {
	box-shadow: inset 0 0 0.5em selecteditem;
}

.channel-panel-settings:has(.stereo:not(:checked)) .stereo-field {
	display: none;
}
.channel-panel {
	border-left: 1px solid gray;
	border-top-right-radius: 4px;
	border-bottom-right-radius: 4px;
	background-color: whitesmoke;
	padding: 4px;
	width: 200px;
	overflow-y: auto;
}
.channel-panel fieldset {
	font-size: 0.9em;
}
.eq-plot {
	border: 1px solid;
	border-radius: 3px;
	background-color: white;
	box-sizing: border-box;
	width: 100%;
	height: 75px;
}
.roomeq {
	grid-column: 2;
}
.eq-grid {
	stroke: black;
}
.eq-curve {
	fill: none;
	stroke: selecteditem;
	stroke-width: 3;
}
.eq-controls {
	display: grid;
	grid-gap: 1px;
}
.eq-controls output {
	border: 0;
	outline: 1px solid gray;
}
.eq-controls :is(select, input[type="number"]) {
	outline: 1px solid gray;
	border: 0;
	background-color: field;
	box-sizing: border-box;
	padding: 1px;
	width: 100%;
}
.eq-controls :is(select, input[type="number"]):focus {
	outline-color: black;
	border: 1px solid black;
	padding: 0;
	z-index: 1;
}
.channel-panel-eq .eq-controls {
	grid-template-columns: 0fr 1fr 1fr 1fr;
}
.channel-panel-eq .eq-controls :nth-child(4n+1) {
	margin-right: 2px;
}
.channel-panel-eq .eq-controls :not(:nth-child(4n+1)) {
	text-align: center;
}
}
